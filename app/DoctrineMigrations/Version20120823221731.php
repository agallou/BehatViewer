<?php

namespace Application\Migrations;

use Doctrine\DBAL\Migrations\AbstractMigration,
    Doctrine\DBAL\Schema\Schema;

/**
 * Auto-generated Migration: Please modify to your need!
 */
class Version20120823221731 extends AbstractMigration
{
    public function up(Schema $schema)
    {
        // this up() migration is autogenerated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() != "mysql");
        
        $this->addSql("ALTER TABLE behatviewer_build CHANGE status status ENUM('passed', 'failed') NOT NULL");
        $this->addSql("ALTER TABLE behatviewer_feature CHANGE status status ENUM('passed', 'failed') NOT NULL");
        $this->addSql("ALTER TABLE behatviewer_project CHANGE type type ENUM('public', 'private') DEFAULT 'public' NOT NULL");
        $this->addSql("ALTER TABLE behatviewer_scenario CHANGE status status ENUM('passed', 'failed') NOT NULL");
        $this->addSql("ALTER TABLE behatviewer_step CHANGE status status ENUM('passed', 'failed', 'skipped', 'pending', 'undefined') NOT NULL");
        $this->addSql("ALTER TABLE behatviewer_user ADD token VARCHAR(40) NOT NULL");

		$this->addSql('UPDATE behatviewer_user SET token=SUBSTRING(MD5(RAND()),1,40)');
    }

    public function down(Schema $schema)
    {
        // this down() migration is autogenerated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() != "mysql");
        
        $this->addSql("ALTER TABLE behatviewer_build CHANGE status status VARCHAR(255) NOT NULL");
        $this->addSql("ALTER TABLE behatviewer_feature CHANGE status status VARCHAR(255) NOT NULL");
        $this->addSql("ALTER TABLE behatviewer_project CHANGE type type VARCHAR(255) DEFAULT 'public' NOT NULL");
        $this->addSql("ALTER TABLE behatviewer_scenario CHANGE status status VARCHAR(255) NOT NULL");
        $this->addSql("ALTER TABLE behatviewer_step CHANGE status status VARCHAR(255) NOT NULL");
        $this->addSql("ALTER TABLE behatviewer_user DROP token");
    }
}
